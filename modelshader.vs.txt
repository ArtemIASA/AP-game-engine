#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;
layout (location = 3) in uvec3 BoneIDs;
layout (location = 4) in vec3 Weights;




out vec2 TexCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 gBones[100];

void main()
{
   
    vec4 totalPos = vec4(0.0);
    vec4 locPos = gBones[BoneIDs[0]] * vec4(aPos, 1.0);
    totalPos += locPos * Weights[0];
    locPos = gBones[BoneIDs[1]] * vec4(aPos, 1.0);
    totalPos += locPos * Weights[1];
    locPos = gBones[BoneIDs[2]] * vec4(aPos, 1.0);
    totalPos += locPos * Weights[2];

    TexCoords = aTexCoords;    

    gl_Position = projection * view * model * vec4(totalPos.x, -totalPos.z, totalPos.y, totalPos.w);
}